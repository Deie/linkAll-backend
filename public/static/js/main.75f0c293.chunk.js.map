{"version":3,"sources":["images/logo-little.png","images/icon-1.svg","images/icon-2.svg","images/icon-3.svg","images/icon-4.svg","images/logo-big.png","images/bgbg.svg","images/bg-screen.jpg","images/searchIcon.svg","components/NotFound.js","api.js","components/Search.js","components/CountryFavList.js","components/HomePage.js","components/ButtonUserProfile.js","components/UserAccount.js","components/Message.js","components/MessageList.js","components/SendMessageForm.js","components/RoomList.js","components/onlineUser.js","components/SearchBar.js","components/GifItem.js","components/GifList.js","components/GifModal.js","components/CurrentChannelCat.js","components/AppMessenger.js","config.js","components/LoginForm.js","components/SignupForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NotFound","react_default","a","createElement","src","alt","Component","backendApi","axios","create","baseURL","process","withCredentials","errorHandler","err","response","data","console","log","alert","getCountries","get","catch","postFile","files","uploadData","FormData","append","post","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","countryArray","countrySearch","event","preventDefault","target","value","_event$target","name","setState","defineProperty","_this2","then","_this3","_this$state","lowerSearch","toLowerCase","filteredArray","filter","oneCountry","includes","className","onSubmit","handleSubmit","onChange","genericOnChange","type","placeholder","autoComplete","map","key","_id","flag","RoomsCategories","oneRoomCategory","Link","to","concat","roomName","icon1","icon4","icon3","icon2","HomePage","logoBig","src_components_Search","ButtonUserProfile","objectSpread","userInfo","updatedInfo","editSuccess","_event$target2","fileUrl","_this4","handleEditSubmit","fullName","age","location","avatarURL","uploadOnChange","description","UserAccount","isDeleteOpen","userName","params","match","Redirect","exact","bgScreen","email","gender","Switch","Route","path","render","src_components_ButtonUserProfile","currentUser","onClick","deleteUser","deleteSuccess","bgbgScreen","Message","sender","text","attachment","link","MessageList","node","ReactDOM","findDOMNode","shouldScrollToBottom","scrollTop","clientHeight","scrollHeight","roomId","messages","message","index","components_Message","id","React","SendMessageForm","selectedGif","selectedGifUrl","handleChange","bind","assertThisInitialized","sendMessage","disabled","RoomList","favorites","updateFavorites","room","patch","toConsumableArray","rooms","sort","b","active","subscribeToRoom","href","OnlineUser","roomUsers","oneName","SearchBar","term","onTermChange","onInputChange","GifItem","_ref","gif","onGifSelect","images","downsized","url","GifList","gifItems","gifs","image","components_GifItem","GifModal","lib_default","isOpen","modalIsOpen","onRequestClose","AppMessenger","country","joinableRooms","joinedRooms","getRooms","handleTermChange","Chatkit","ChatManager","instanceLocator","userId","tokenProvider","TokenProvider","connect","updateCountryState","oldProps","oldParams","countryName","find","oneCat","chatkitId","String","hooks","onMessage","userIds","_this5","sendMultipartMessage","parts","content","_this6","replace","_this7","classList","components_RoomList","onlineUser","components_MessageList","components_SendMessageForm","components_SearchBar","components_GifList","openModal","components_GifModal","closeModal","LoginForm","originalPassword","loginCredentials","loginSuccess","react","onClickLog","SignupForm","userSubmission","signupSuccess","checked","htmlFor","onClickSign","App","localStorage","getItem","JSON","parse","newUser","setItem","stringify","removeItem","countries","push","timestamp","Date","now","i","length","splice","$","click","modal","updateUser","deletedUser","user","NavLink","logo","LogoutClick","data-toggle","data-target","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","src_components_LoginForm","src_components_SignupForm","src_components_HomePage","favListImport","favInitialState","toggleFav","toggleFavorite","component","src_components_UserAccount","components_AppMessenger","Boolean","window","hostname","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75f0c293.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-little.e42f9e12.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-1.9ec5d5fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-2.d3984b39.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-3.7da228b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-4.1bdf7dd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-big.0fa01917.png\";","module.exports = __webpack_public_path__ + \"static/media/bgbg.ba9a92d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-screen.2bce2da8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.442aee7e.svg\";","import React, { Component } from \"react\";\n\nimport \"./NotFound.css\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <section>\n        <h2>OOPS !></h2>\n        <p>This page does not exist</p>\n        <img src=\"#\" alt=\"error\" />\n      </section>\n    );\n  }\n}\n\nexport default NotFound;\n","import axios from \"axios\";\n\n// Create an Axios object with pre-configurate setting\nconst backendApi = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true\n});\n\n// ERROR HANDLER ###################################################################\n//----------------------------------------------------------------------------------\n\nfunction errorHandler(err) {\n  // Console message for debbuging\n  if (err.response && err.response.data) {\n    console.log(\"API Error\", err.response.data);\n  } else {\n    console.log(\"React Code Error\", err);\n  }\n  // Alert generic message for the user\n  alert(\"Sorry ! Some went wrong\");\n\n  // cause the error again so the .then() won't be called\n  throw err;\n}\n\n// DATA ###################################################################\n//-------------------------------------------------------------------------\nexport function getCountries() {\n  return backendApi.get(\"/api/countries\").catch(errorHandler);\n}\n\nexport function getCountryDetails(countryName) {\n  return backendApi.get(`/api/countries/${countryName}`).catch(errorHandler);\n}\n\n// USER ###################################################################\n//-------------------------------------------------------------------------\nexport function getUserDetails(userName) {\n  return backendApi.get(`/api/account/${userName}`).catch(errorHandler);\n}\n\nexport function getUserDetailsForEdit(userNameToEdit) {\n  return backendApi\n    .get(`/api/account/${userNameToEdit}/edit`)\n    .catch(errorHandler);\n}\n\nexport function postUserEditDetails(updatedInfo) {\n  return backendApi\n    .post(`/api/account/${updatedInfo.name}/edit-user`, updatedInfo)\n    .catch(errorHandler);\n}\n\nexport function postUserDelete(deletedUser) {\n  return backendApi\n    .post(`/api/account/${deletedUser.name}/delete`, deletedUser)\n    .catch(errorHandler);\n}\n\nexport function postFile(files) {\n  // create a FormData object that packages up the file for uploading\n  const uploadData = new FormData();\n  // add the first file to the uploadData \"package\"\n  // (the name \"userFile\" is the one the backend is expecting)\n  uploadData.append(\"userFile\", files[0]);\n\n  return backendApi.post(\"/api/avatar-upload\", uploadData).catch(errorHandler);\n}\n\n// AUTH ###################################################################\n//-------------------------------------------------------------------------\nexport function postSignUp(userSubmission) {\n  return backendApi\n    .post(\"/api/process-signup\", userSubmission)\n    .catch(errorHandler);\n}\n\nexport function postLogin(loginCredentials) {\n  return backendApi\n    .post(\"/api/process-login\", loginCredentials)\n    .catch(errorHandler);\n}\n\nexport function getLogOut() {\n  return backendApi.get(\"/api/logout\").catch(errorHandler);\n}\n\nexport function patchFavorite(roomId) {\n  return backendApi\n    .patch(\"/api/account/favorite\", { roomId })\n    .catch(errorHandler);\n}\n\nexport function getFavorite() {\n  return backendApi.get(\"/api/account/favorite\").catch(errorHandler);\n}\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\n// import chatkit from \"@pusher/chatkit-client\";\nimport icon1 from \"../images/icon-1.svg\";\nimport icon2 from \"../images/icon-2.svg\";\nimport icon3 from \"../images/icon-3.svg\";\nimport icon4 from \"../images/icon-4.svg\";\nimport { getCountries } from \"../api.js\";\n\nimport \"./Search.css\";\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countryArray: [],\n      countrySearch: \"\"\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"handleSubmit ok ?\");\n  }\n\n  genericOnChange(event) {\n    console.log(event.target.value, \"TEST generic onchange event\");\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  componentDidMount() {\n    // CONNECTION FRONT & BACK is HERE :\n    // get datat from our Express API (localhost:5555) (now in api.js)\n    getCountries().then(response => {\n      // console.log(\"our COUNTRIES :\", response.data);\n      // SAVE the JSON data from the API into the state\n      this.setState({ countryArray: response.data });\n    });\n  }\n\n  render() {\n    const { countryArray, countrySearch } = this.state;\n    // console.log(countryArray, countrySearch);\n\n    const lowerSearch = countrySearch.toLowerCase();\n    const filteredArray = countryArray.filter(oneCountry => {\n      const lowerName = oneCountry.name.toLowerCase();\n      return lowerName.includes(lowerSearch);\n    });\n\n    return (\n      <section className=\"searchResult\">\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <input\n            onChange={event => this.genericOnChange(event)}\n            value={this.state.oneCountry}\n            name=\"countrySearch\"\n            type=\"text\"\n            className=\"search-bar text-center w-100\"\n            placeholder=\"Search for a country\"\n            autoComplete=\"off\"\n          />\n        </form>\n\n        {countrySearch === \"\" ? null : (\n          <div className=\"countryList container\">\n            <ul className=\"row d-flex justify-content-center\">\n              {filteredArray.map(oneCountry => {\n                return (\n                  <li\n                    className=\"oneCountry col-lg-4 col-md-6 col-sm-12 w-100\"\n                    key={oneCountry._id}\n                  >\n                    <div className=\"li-content\">\n                      <img\n                        src={oneCountry.flag}\n                        className=\"countryFlag\"\n                        alt=\"country flag\"\n                      />\n                      <h4>{oneCountry.name}</h4>\n                      {/* <p>{oneCountry.capital}</p> */}\n                      <div className=\"iconList d-flex justify-content-center\">\n                        {oneCountry.RoomsCategories.map(oneRoomCategory => {\n                          return (\n                            <Link\n                              key={oneRoomCategory._id}\n                              to={`/linkall-messenger/${oneCountry.name}/${\n                                oneRoomCategory.roomName\n                              }`}\n                            >\n                              {oneRoomCategory.roomName === \"Travel in\" ? (\n                                <img src={icon1} alt=\"\" className=\"icons\" />\n                              ) : oneRoomCategory.roomName === \"Fooding\" ? (\n                                <img src={icon4} alt=\"\" className=\"icons\" />\n                              ) : oneRoomCategory.roomName ===\n                                \"Culture & language\" ? (\n                                <img src={icon3} alt=\"\" className=\"icons\" />\n                              ) : (\n                                <img src={icon2} alt=\"\" className=\"icons\" />\n                              )}\n                            </Link>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Search;\n\n// chatkit.addUsersToRoom({\n//   roomId: room.id,\n//   userIds: ['alice', 'bob']\n// })\n//   .then(() => console.log('added'))\n//   .catch(err => console.error(err))\n","import React, { Component } from \"react\";\nimport \"./CountryFavList.css\";\nimport { Link } from \"react-router-dom\";\n// import CountryCard from './CountryCard';\n\n// const countriesArray = this.props.countryArray;\n// console.log(\"lolo\", countriesArray);\n\n// const listOfCountryPerRow = (countries, row, itemsPerRow, match) => {\n\n// countries\n//         .slice((row - 1) * itemsPerRow, row * itemsPerRow)\n//         .map(country => <CountryCard country={country} key={country.id} match={match} />);\n\n// }\n// const listOfRows = (countries, itemsPerRow, match) => {\n//     const numberOfCountry = countries.length;\n\n//     const rows = Math.ceil(numberOfCountry / itemsPerRow);\n//     return Array(rows)\n//         .fill()\n//         .map((val, rowIndex) => (\n//             <div className=\"columns\">\n//                 {listOfCountryPerRow(countries, rowIndex + 1, itemsPerRow, match)}\n//             </div>\n//         ));\n// };\n\nclass CountryFavList extends Component {\n  state = {};\n  render() {\n    const { countryArray } = this.props;\n    console.log(countryArray);\n    return (\n      <ul>\n        {countryArray.map(oneCountry => {\n          return (\n            <li>\n              <h3>{oneCountry.name}</h3>\n              {/* <img src={oneCountry.flag} /> */}\n\n              {oneCountry.RoomsCategories.map(oneRoomCategory => {\n                return (\n                  <div>\n                    <Link\n                      to={`/linkall-messenger/${oneCountry.name}/${\n                        oneRoomCategory.roomName\n                      }`}\n                    >\n                      <h4>{oneRoomCategory.roomName}</h4>\n                    </Link>\n                    <button>UNbookMaRk </button>\n                  </div>\n                );\n              })}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\nexport default CountryFavList;\n","import React, { Component } from \"react\";\n\nimport \"./HomePage.css\";\nimport Search from \"./Search\";\n\nimport CountryFavList from \"./CountryFavList\";\nimport { getCountries } from \"../api.js\";\nimport logoBig from \"../images/logo-big.png\"\nimport search from \"../images/searchIcon.svg\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countryArray: []\n    };\n  }\n\n  componentDidMount() {\n    getCountries().then(response => {\n      console.log(\"Countries\", response.data);\n      this.setState({ countryArray: response.data });\n    });\n  }\n\n  render() {\n    return (\n      <section className=\"HomePage container d-flex align-items-center justify-content-center\">\n        <div className=\"row w-100\">\n         \n          <div className=\"col-12 m-auto text-center\">\n            <img src={logoBig} alt=\"logo\" className=\"imgLogo mt-4 \" />\n\n            <h6 className=\"text-uppercase text-small letter-space\">\n              Welcome to Link'All ! Your favorite Chat country.\n            </h6>\n\n            <Search />\n          </div>\n        </div>\n        {/*  end row */}\n      </section>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport \"./ButtonUserProfile.css\";\nimport { postUserEditDetails, postFile } from \"../api\";\n\n\nclass ButtonUserProfile extends Component {\n  constructor(props) {\n    super(props);\n    // copy the userInfo object as our state\n    this.state = { ...this.props.userInfo };\n  }\n\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n  \n  handleEditSubmit(event) {\n    event.preventDefault();\n    postUserEditDetails(this.state).then(response => {\n      this.props.editSuccess(response.data);\n      console.log(\"User\", response.data);\n    });\n  }\n\n  uploadOnChange(event) {\n    const { name, files } = event.target;\n\n    postFile(files).then(response => {\n      console.log(\"Upload File Info\", response.data);\n      this.setState({ [name]: response.data.fileUrl });\n    });\n  }\n\n\n\n \n\n\n  render() {\n    return (\n      <div className=\"ButtonUserProfile\">\n        <div className=\"EditBtn\">\n          <form onSubmit={event => this.handleEditSubmit(event)}>\n            <div className=\"form-group\">\n            <label>\n                Full Name:\n            </label>\n              <input className=\"form-control\"\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.fullName}\n                name=\"fullName\"\n                type=\"text\"\n                placeholder=\"Your name\"\n              />\n            </div>\n            <div className=\"form-group\">\n            <label>\n              Age:\n            </label>\n              <input className=\"form-control\"\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.age}\n                name=\"age\"\n                type=\"number\"\n                placeholder=\"Your age (must be at least 18)\"\n              />\n            </div>\n            <div className=\"form-group\">\n            <label>\n              Location:\n            </label>\n              <input className=\"form-control\"\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.location}\n                name=\"location\"\n                type=\"text\"\n                placeholder=\"Your city and country (ex: Paris, FRANCE)\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>\n                Picture:\n            </label>\n              <img className=\"img-thumbnail rounded upImg\" src={this.state.avatarURL} />\n              <input className=\"form-control\"\n                onChange={event => this.uploadOnChange(event)}\n                name=\"avatarURL\"\n                type=\"file\"\n              />\n              \n            </div>\n\n\n            <div className=\"form-group\">\n            <label>\n              Description:\n            </label>\n              <input className=\"form-control\"\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.description}\n                name=\"description\"\n                type=\"text\"\n                placeholder=\"#geek #photography #tennis #TeamDog\"\n              />\n</div>\n            <button type=\"submit\" className=\"btn btn-success\">Save</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ButtonUserProfile;\n","import React, { Component } from \"react\";\nimport { Link, Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./UserAccount.css\";\nimport \"../userDefault.svg\";\nimport { getUserDetails } from \"../api\";\nimport ButtonUserProfile from \"./ButtonUserProfile\";\nimport { getCountries } from \"../api.js\";\nimport CountryFavList from \"./CountryFavList\";\n\nimport bgbgScreen from \"../images/bgbg.svg\"\nimport bgScreen from \"../images/bg-screen.jpg\"\nclass UserAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInfo: {},\n      isDeleteOpen: false,\n      countryArray: []\n    };\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    getUserDetails(params.userName).then(response => {\n      console.log(\"User\", response.data);\n      this.setState({ userInfo: response.data });\n    });\n\n    getCountries().then(response => {\n      console.log(\"Countries\", response.data);\n      this.setState({ countryArray: response.data });\n    });\n  }\n\n  deleteUser() {\n    this.setState({ isDeleteOpen: true }); \n    \n  }\n\n  render() {\n    const { userInfo } = this.state;\n    console.log(this.state);\n    return this.state.isDeleteOpen ? (\n  \n      <Redirect exact to=\"/\" />\n    )\n    :\n    (\n      <div className=\"UserAccount\">\n          <section className=\"User-profile\">\n            \n            <img src={bgScreen} alt=\"\" className=\"bgScreen\"/>\n            <div className=\" container\">\n          <div className=\"row user\">\n            <div className=\"User-visual col-5 text-center\">\n              <img src={userInfo.avatarURL} alt=\"User Profile \" className=\"userAvatar\" />\n              <h2>{userInfo.name}</h2>\n              <p>{userInfo.fullName}</p>\n              <b>{userInfo.email}</b>\n                <p>From : <b>{userInfo.location}</b></p>\n                <p><i>{userInfo.age}</i> years old</p>\n                <p><i>{userInfo.gender}</i></p>  \n              \n                <p>{userInfo.description}</p>\n\n                <div className=\"buttons\">\n                  <Link to={`/account/${userInfo.name}/edit`}>\n                    <button className=\"btn btn-primary\">Edit your profile</button>\n                  </Link>\n\n                  <Link to={`/account/${userInfo.name}/delete`}>\n                    <button className=\"btn btn-danger\">Delete your profile</button>\n                  </Link>\n                </div>\n            </div>\n              <div className=\"User-info col-7\">\n\n                <Switch>\n                  <Route\n                    path=\"/account/:userName/edit\"\n                    render={() => {\n                      return <ButtonUserProfile\n                        userInfo={this.props.currentUser}\n                        editSuccess={this.props.editSuccess} />;\n                    }}\n                  />\n\n\n                  <Route\n                    path=\"/account/:userName/delete\"\n                    render={() => {\n                      return (\n                        <div className=\"verif-delete text-center\">\n                          <h2>To confirm press the delete button</h2>\n                          <button className=\"btn btn-dark\" onClick={(deleteUser) => this.props.deleteSuccess(deleteUser)}>Delete</button>\n                        </div>\n                      );\n                    }}\n                  />\n\n                  <Route\n                    path=\"/account/:userName\"\n                    render={() => {\n                      return (\n                        <section className=\"Fav-channels\">\n                          \n                          <img src={bgbgScreen} alt=\"bg\" className=\"w-100\"/>\n                        </section>\n                      );\n                    }}\n                  />\n\n                </Switch>\n                </div>\n              </div>\n          </div>\n\n       \n        </section>\n        {/*end section user-profile */}\n        \n\n      </div>\n    );\n  }\n}\n\nexport default UserAccount;\n","import React from \"react\";\n\nfunction Message(props) {\n  return (\n    <div className=\"message\">\n      <div className=\"message-username\">{props.sender.name}</div>\n      <div className=\"message-avatarURL\">\n        <img\n          src={props.sender.avatarURL}\n          alt=\"avatar pict\"\n          className=\"imgPic\"\n        />\n      </div>\n\n      <div className=\"textDiv\">\n        {props.text === \"\" ? null : (\n          <div className=\"message-text\">{props.text}</div>\n        )}\n      </div>\n      <div className=\"gifDiv\">\n        {props.attachment && props.attachment.type === \"image\" && (\n          <img src={props.attachment.link} className=\"gif\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Message;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Message from \"./Message\";\n\nclass MessageList extends React.Component {\n  // ######## prevent automatically scrolling when you read a Up's message #######\n  componentWillUpdate() {\n    const node = ReactDOM.findDOMNode(this);\n    this.shouldScrollToBottom =\n      node.scrollTop + node.clientHeight + 100 >= node.scrollHeight;\n  }\n  // ######## scrolling automatically when you receive a new message #######\n\n  componentDidUpdate() {\n    if (this.shouldScrollToBottom) {\n      const node = ReactDOM.findDOMNode(this);\n      node.scrollTop = node.scrollHeight;\n    }\n  }\n  // scrollTop : how far we scroll down\n  // scrollHeight : how long the entire element scrollable is\n\n  render() {\n    if (!this.props.roomId) {\n      return (\n        <div className=\"message-list\">\n          <div className=\"join-room\">&uarr; Start to Link'All!</div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"message-list\">\n        {this.props.messages.map((message, index) => {\n          return (\n            <Message\n              key={message.id}\n              sender={message.sender}\n              text={message.text}\n              attachment={message.attachment}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default MessageList;\n","import React from \"react\";\n// import Sound from \"react-sound\";\n\nclass SendMessageForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      message: \"\",\n      selectedGif: null,\n      selectedGifUrl: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      message: event.target.value\n      // selectedGif: event.target.req.body\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.sendMessage(this.state.message);\n    this.setState({\n      message: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"send-message-form\">\n        {/* <input\n          disabled={this.props.disabled} // Empeche d'écrire avant de rejoindre une Room\n          onChange={this.handleChange}\n          value={this.state.message}\n          placeholder=\"Send gif hit ENTER\"\n          type=\"file\"\n        > */}\n        {this.props.selectedGifUrl && <img src={this.props.selectedGifUrl} />}\n\n        <input\n          disabled={this.props.disabled} // Empeche d'écrire avant de rejoindre une Room\n          onChange={this.handleChange}\n          value={this.state.message}\n          placeholder=\"Type your message and hit ENTER\"\n          type=\"text\"\n          className=\"inputtypetext\"\n        />\n      </form>\n      //   <Sound\n      //   url=\"cool_sound.mp3\"\n      //   playStatus={Sound.status.PLAYING}\n      //   playFromPosition={300 /* in milliseconds */}\n      //   onLoading={this.handleSongLoading}\n      //   onPlaying={this.handleSongPlaying}\n      //   onFinishedPlaying={this.handleSongFinishedPlaying}\n      // />\n    );\n  }\n}\n\nexport default SendMessageForm;\n","import React from \"react\";\nimport { patchFavorite, getFavorite } from \"../api\";\n\nclass RoomList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favorites: []\n    };\n  }\n\n  componentDidMount() {\n    this.updateFavorites();\n  }\n\n  favoriteClick(room) {\n    console.log(\"ROOM FAVORITE\", room.id);\n\n    patchFavorite(room.id).then(() => {\n      this.updateFavorites();\n    });\n  }\n\n  updateFavorites() {\n    getFavorite().then(response => {\n      console.log(\"Favorite Array\", response.data);\n      this.setState({ favorites: response.data });\n    });\n  }\n\n  render() {\n    const { favorites } = this.state;\n    // Room sort by order appear\n    const orderedRooms = [...this.props.rooms].sort((a, b) => a.id - b.id);\n    return (\n      <div className=\"rooms-list\">\n        <div className=\"rooms-ul text-center\">\n          <h1>\n            <b>Your rooms</b>\n          </h1>\n          <ul>\n            {this.props.rooms.map(room => {\n              // class \"active\" if you are in this current room :\n              const active = this.props.roomId === room.id ? \"active\" : \"\";\n              return (\n                <li key={room.id} className={\"room\" + active}>\n                  <a\n                    onClick={() => this.props.subscribeToRoom(room.id)}\n                    href=\"#!\"\n                  >\n                    # {room.name}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RoomList;\n","import React, { Component } from \"react\";\n\nclass OnlineUser extends Component {\n  render() {\n    const { roomUsers } = this.props;\n\n    return (\n      <div className=\"userOnline\">\n        <h4>Online user(s)</h4>\n        {roomUsers.map(oneName => {\n          return <li key={oneName}> {oneName} </li>;\n        })}\n      </div>\n    );\n  }\n}\n\nexport default OnlineUser;\n","import React from 'react';\n\nclass SearchBar extends React.Component {\n    constructor() {\n        super();\n        this.state = { term: '' }\n    }\n\n    onInputChange(term) {\n        this.setState({ term });\n        this.props.onTermChange(term);\n    }\n\n    render() {\n        return (\n            <div className=\"SearchBar\">\n                <input \n                className=\"SearchBarInput\" \n                placeholder=\"Enter text to search for gifs!\" \n                onChange={event => this.onInputChange(event.target.value)} />\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;","import React from 'react';\n\nconst GifItem = ({ gif, onGifSelect }) => {\n    return (\n        <li className=\"gif-item\" onClick={() => onGifSelect(gif)}>\n            <img src={gif.images.downsized.url}/>\n\n        </li>\n\n    )\n};\n\nexport default GifItem;\n","import React from \"react\";\nimport GifItem from \"./GifItem\";\n\nconst GifList = props => {\n  const gifs = props.gifs;\n\n  const gifItems = gifs\n    // .slice((gifs), 9)\n    .map(image => {\n      return (\n        <GifItem key={image.id} gif={image} onGifSelect={props.onGifSelect} />\n      );\n    });\n\n  return <ul className=\"gif-list\">{gifItems}</ul>;\n};\n\nexport default GifList;\n","import React from 'react';\nimport Modal from 'react-modal';\n\nconst GifModal = (props) => {\n    if (!props.selectedGif) {\n        return <div></div>;\n    }\n    \n    return (\n        <Modal\n            isOpen={props.modalIsOpen}\n            onRequestClose={() => props.onRequestClose()}>\n            <div className=\"gif-modal\">\n                <img className=\"gifimg\" src={props.selectedGif.images.downsized.url} />\n                <button className=\"btn btn-primary btnviolet\"\n                    onClick={() => {\n                        console.log(\"AAAAAAAAAAAAAAAAAA\", props.selectedGif.images.downsized.url );\n                     return props.onRequestClose(props.selectedGif.images.downsized.url)}}>Send</button>\n            </div>\n        </Modal>\n    );\n};\n\nexport default GifModal;","import React, { Component } from \"react\";\n// import RoomList from \"./RoomList.js\";\n\nclass CurrentChannelCat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const orderedRooms = [...this.props.rooms].sort((a, b) => a.id - b.id);\n\n    return (\n      <div className=\"current-channel-cat\">\n        <h2>Here cat info: </h2>\n        {this.props.rooms.map(room => {\n          // class \"active\" if you are in this current room :\n          const active = this.props.roomId === room.id ? \"active\" : \"\";\n          return (\n            <div key={room.id} className={\"room \" + active}>\n              <p onClick={() => this.props.subscribeToRoom(room.id)}>\n                #{room.name}\n              </p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default CurrentChannelCat;\n\n// {\n//   /* <h3>Here it's{currentRoom} </h3>\n//         <h4>let's try : {categories} </h4>  */\n// }\n","import React from \"react\";\nimport Chatkit from \"@pusher/chatkit-client\";\nimport MessageList from \"./MessageList\";\nimport SendMessageForm from \"./SendMessageForm\";\nimport RoomList from \"./RoomList\";\nimport Search from \"./Search.js\";\nimport OnlineUser from \"./onlineUser.js\";\nimport SearchBar from \"./SearchBar\";\nimport GifList from \"./GifList\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\n\nimport { tokenUrl, instanceLocator } from \"../config.js\";\nimport { getCountryDetails } from \"../api\";\nimport CurrentChannelCat from \"./CurrentChannelCat.js\";\nimport GifModal from \"./GifModal\";\n\nclass AppMessenger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      country: {},\n      roomId: null,\n      roomUsers: [],\n      messages: [],\n      joinableRooms: [],\n      joinedRooms: [],\n      gifs: [],\n      selectedGif: null,\n      selectedGifUrl: \"\",\n      modalIsOpen: false\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.subscribeToRoom = this.subscribeToRoom.bind(this);\n    this.getRooms = this.getRooms.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n  }\n\n  componentDidMount() {\n    // const { userInfo } = userInfo.name;\n    // console.log(userInfo.name);\n    const chatManager = new Chatkit.ChatManager({\n      instanceLocator,\n      userId: this.props.currentUser.name,\n      tokenProvider: new Chatkit.TokenProvider({\n        url: tokenUrl\n      })\n    });\n\n    chatManager\n      .connect()\n      .then(currentUser => {\n        this.currentUser = currentUser;\n\n        this.getRooms();\n        this.updateCountryState();\n      })\n      .catch(err => console.log(\"error on connecting: \", err));\n  }\n\n  componentDidUpdate(oldProps) {\n    const oldParams = oldProps.match.params;\n    const params = this.props.match.params;\n\n    if (\n      oldParams.countryName !== params.countryName ||\n      oldParams.roomName !== params.roomName\n    ) {\n      this.updateCountryState();\n    }\n  }\n\n  updateCountryState() {\n    const { params } = this.props.match;\n\n    getCountryDetails(params.countryName).then(response => {\n      console.log(\"Country Details\", response.data);\n      this.setState({ country: response.data });\n\n      const room = response.data.RoomsCategories.find(oneCat => {\n        return oneCat.roomName === params.roomName;\n      });\n      this.subscribeToRoom(room.chatkitId);\n    });\n  }\n\n  getRooms() {\n    // this.currentUser\n    // .getJoinableRooms()\n    // .then(joinableRooms => {\n    this.setState({\n      // joinableRooms,\n      joinedRooms: this.currentUser.rooms\n    });\n    // })\n    // .catch(err => console.log(\"error on joinableRooms: \", err));\n  }\n\n  subscribeToRoom(roomId) {\n    this.setState({ messages: [] });\n    this.currentUser\n      .subscribeToRoom({\n        roomId: String(roomId),\n        // messageLimit: 100,\n        hooks: {\n          onMessage: message => {\n            console.log(\"hello)-------\", message)\n            this.setState({\n              messages: [...this.state.messages, message]\n            });\n          }\n          // CREATE A NEW COMPONENT FOR  : user typing indicator\n          // onUserStartedTyping: user => {\n          //   /** render out the users */\n        }\n      })\n\n      .then(room => {\n        this.setState({\n          roomId: room.id,\n          roomUsers: room.userIds\n        });\n        this.getRooms();\n      })\n      .catch(err => console.log(\"error on subscribing to room\", err));\n  }\n\n  sendMessage(text) {\n    if (!this.state.selectedGifUrl) {\n      this.currentUser.sendMessage({\n        text,\n        roomId: this.state.roomId\n      });\n      return;\n    }\n\n    this.currentUser.sendMultipartMessage({\n      roomId: this.state.roomId,\n      parts: [\n        { type: \"text/plain\", content: text },\n        {\n          type: \"image/gif\",\n          url: this.state.selectedGifUrl,\n        },\n      ] \n    }).then(() => this.setState({ selectedGifUrl: \"\" }));\n  }\n\n  // GIF RELATED----------------------------\n  handleTermChange(term) {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${term.replace(\n      /\\s/g,\n      \"+\"\n    )}&api_key=${process.env.REACT_APP_GIPHY_API_KEY}`;\n    axios\n      .get(url)\n      .then(response => {\n        this.setState({ gifs: response.data.data });\n      })\n      .catch(err => console.log(\"error on giphy\", err));\n  }\n\n  openModal(gif) {\n    this.setState({\n      modalIsOpen: true,\n      selectedGif: gif\n    });\n  }\n\n  closeModal(url) {\n    this.setState({\n      modalIsOpen: false,\n      selectedGifUrl: url\n    });\n  }\n\n  render() {\n    const { params } = this.props.match;\n    let classList = \"AppMessenger\";\n    if (params.roomName === \"Time Out\") {\n      classList = \"AppMessenger dark\";\n    }\n\n    return (\n      <div className={classList}>\n        {/* <Search /> */}\n\n        <RoomList\n          subscribeToRoom={this.subscribeToRoom}\n          rooms={[...this.state.joinedRooms]}\n          roomId={this.state.roomId}\n        />\n\n        {/* <CurrentChannelCat rooms={[...this.state.joinedRooms]} /> */}\n\n        <OnlineUser roomUsers={this.state.roomUsers} />\n\n        <MessageList\n          roomId={this.state.roomId}\n          messages={this.state.messages}\n        />\n        <SendMessageForm\n          disabled={!this.state.roomId}\n          sendMessage={this.sendMessage}\n          selectedGifUrl={this.state.selectedGifUrl}\n        />\n\n        <div className=\"Gif-search\">\n          <SearchBar onTermChange={this.handleTermChange} />\n          <GifList\n            gifs={this.state.gifs}\n            onGifSelect={selectedGif => this.openModal(selectedGif)}\n          />\n          <GifModal\n            modalIsOpen={this.state.modalIsOpen}\n            selectedGif={this.state.selectedGif}\n            // modelHelp={event => this.state.helpModal(event)}\n            onRequestClose={url => this.closeModal(url)}\n          />\n        </div>\n\n        {/* // opposite value of disabled on sendmessageForm (// Empeche d'écrire avant de rejoindre une Room) */}\n      </div>\n    );\n  }\n}\n\nexport default AppMessenger;\n","const tokenUrl = process.env.REACT_APP_CHATKIT_TOKEN_URL;\nconst instanceLocator = process.env.REACT_APP_CHATKIT_INSTANCE_LOCATOR_URL;\n\nexport { tokenUrl, instanceLocator };\n","import React, { Component, Fragment } from \"react\";\n\nimport \"./LoginForm.css\";\nimport { postLogin } from \"../api\";\nimport { Redirect } from \"react-router-dom\";\nimport HomePage from \"./HomePage\";\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      originalPassword: \"\"\n    };\n  }\n\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    //submit login into the backend\n    postLogin(this.state).then(response => {\n      //console.log(\"Log In Result\", response.data);\n      this.props.loginSuccess(response.data);\n    });\n  }\n\n  render() {\n    return this.props.currentUser ? (\n      <Fragment>\n        <p>WELCOME, let's start to CHAT</p>\n        <img\n          className=\"img-thumbnail rounded mx-auto d-block\"\n          src=\"https://media.giphy.com/media/7OVRDntHUDGpLrDpjV/giphy.gif\"\n          alt=\"login okay\"\n        />\n      </Fragment>\n    ) : (\n      <section className=\"LoginForm\">\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <div className=\"form-group\">\n            <label>Email:</label>\n            <input\n              className=\"form-control\"\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.email}\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Your email address\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Password:</label>\n            <input\n              className=\"form-control\"\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.originalPassword}\n              name=\"originalPassword\"\n              type=\"password\"\n              placeholder=\"Your password\"\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-success\"\n            onClick={() => this.props.onClickLog()}\n            id=\"closeModal\"\n          >\n            Log In\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component, Fragment } from \"react\";\n\nimport \"./SignupForm.css\";\nimport { postSignUp, postFile } from \"../api.js\";\n\nclass SignupForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      originalPassword: \"\",\n      name: \"\", // PSEUDO linked to CHATKIT\n      age: 0,\n      location: \"\",\n      avatarURL: \"\", // linked to CHATKIT\n      gender: \"\",\n      description: \"\",\n      id: \"\" // created for CHATKIT id\n    };\n  }\n\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  uploadOnChange(event) {\n    const { name, files } = event.target;\n\n    postFile(files).then(response => {\n      console.log(\"Upload File Info\", response.data);\n      this.setState({ [name]: response.data.fileUrl });\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    postSignUp(this.state).then(response => {\n      console.log(\"Sign Up Result\", response.data);\n      this.props.signupSuccess(response.data);\n    });\n  }\n\n  render() {\n    return this.props.currentUser ? (\n      <Fragment>\n        <p>GREAT, you are logged. Let chat !</p>\n        <img\n          className=\"img-thumbnail rounded mx-auto d-block\"\n          src=\"https://media.giphy.com/media/kOZ5BWKm2tMGs/giphy.gif\"\n          alt=\"sign up okay\"\n        />\n      </Fragment>\n    ) : (\n      <section className=\"SignupForm\">\n        <div>\n          <h2>Sign Up</h2>\n\n          <form onSubmit={event => this.handleSubmit(event)}>\n            <div className=\"form-group\">\n              <label>Name:</label>\n              <input\n                className=\"form-control\"\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.fullName}\n                name=\"fullName\"\n                type=\"text\"\n                placeholder=\"Your name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Pseudo:</label>\n              <input\n                className=\"form-control\"\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.name}\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Your pseudo\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Age:</label>\n              <input\n                className=\"form-control\"\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.age}\n                name=\"age\"\n                type=\"number\"\n                placeholder=\"Your age (must be at least 18)\"\n              />\n            </div>\n\n            <div className=\"form-check\">\n              <p>Gender</p>\n              <input\n                className=\"form-check-input\"\n                onChange={event => this.genericOnChange(event)}\n                checked={this.state.gender === \"female\"}\n                value=\"female\"\n                name=\"gender\"\n                type=\"radio\"\n                placeholder=\"Your name\"\n                id=\"gender-female\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"gender-female\">\n                Female:\n              </label>\n\n              <input\n                className=\"form-check-input\"\n                onChange={event => this.genericOnChange(event)}\n                checked={this.state.gender === \"male\"}\n                value=\"male\"\n                name=\"gender\"\n                type=\"radio\"\n                placeholder=\"Your name\"\n                id=\"gender-male\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"gender-male\">\n                Male:\n              </label>\n\n              <input\n                className=\"form-check-input\"\n                onChange={event => this.genericOnChange(event)}\n                checked={this.state.gender === \"neutral\"}\n                value=\"neutral\"\n                name=\"gender\"\n                type=\"radio\"\n                placeholder=\"Your name\"\n                id=\"gender-neutral\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"gender-neutral\">\n                Neutral:\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label>\n                Location:\n                <input\n                  className=\"form-control\"\n                  onChange={event => this.genericOnChange(event)}\n                  value={this.state.location}\n                  name=\"location\"\n                  type=\"text\"\n                  placeholder=\"Your city and country (ex: Paris, FRANCE)\"\n                />\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Email:</label>\n              <input\n                className=\"form-control\"\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.email}\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Your email address\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Password (with 1 number minimum):</label>\n              <input\n                className=\"form-control\"\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.originalPassword}\n                name=\"originalPassword\"\n                type=\"password\"\n                placeholder=\"Your password\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Picture:</label>\n              <input\n                className=\"form-control\"\n                onChange={event => this.uploadOnChange(event)}\n                name=\"avatarURL\"\n                type=\"file\"\n              />\n              <img\n                className=\"img-thumbnail rounded mx-auto d-block\"\n                src={this.state.avatarURL}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Describe yourself in #:</label>\n              <input\n                className=\"form-control\"\n                onChange={event => this.genericOnChange(event)}\n                value={this.state.description}\n                name=\"description\"\n                type=\"text\"\n                placeholder=\"#geek #photography (up to 6)\"\n              />\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-success\"\n              onClick={() => this.props.onClickSign()}\n            >\n              Sign Up\n            </button>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default SignupForm;\n\n/*\n\nchatkit.createUser({\n  id: 'userId',\n  name: 'Some name',\n})\n  .then(() => {\n    console.log('User created successfully');\n  }).catch((err) => {\n    console.log(err);\n  });\n\n\n\n\n  \n*/\n","import React, { Component } from \"react\";\nimport logo from \"./images/logo-little.png\";\nimport \"./App.css\";\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport NotFound from \"./components/NotFound.js\";\nimport HomePage from \"./components/HomePage.js\";\nimport Search from \"./components/Search\";\nimport { getLogOut } from \"./api\";\nimport { postUserDelete } from \"./api\";\nimport UserAccount from \"./components/UserAccount\";\nimport AppMessenger from \"./components/AppMessenger.js\";\nimport LoginForm from \"./components/LoginForm\";\nimport SignupForm from \"./components/SignupForm\";\nimport $ from \"jquery\";\n\nfunction getUseraddress(user) {\n  return `/account/${user.name}`;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let userInfo = localStorage.getItem(\"currentUser\");\n    if (userInfo) {\n      // turn the string back into an object if he's logged in\n      userInfo = JSON.parse(userInfo);\n    }\n    this.state = {\n      currentUser: userInfo\n      // favorites: []\n    };\n  }\n\n  updateUser(newUser) {\n    if (newUser) {\n      //save the user info in localstorage if he's log in\n      //(turn it into JSON string before saving)\n      localStorage.setItem(\"currentUser\", JSON.stringify(newUser));\n    } else {\n      // delete the user info fron localStorage if he's log out\n      localStorage.removeItem(\"currentUser\");\n    }\n\n    this.setState({ currentUser: newUser });\n  }\n\n  addToFavorites(countries) {\n    var favorites = this.state.favorites;\n\n    favorites.push({\n      countries: countries,\n      timestamp: Date.now()\n    });\n\n    this.setState({\n      favorites: favorites\n    });\n\n    localStorage.favorites = JSON.stringify(favorites);\n  }\n\n  removeFromFavorites(countries) {\n    var favorites = this.state.favorites;\n    var index = -1;\n\n    for (var i = 0; i < favorites.length; i++) {\n      if (favorites[i].countries === countries) {\n        index = i;\n        break;\n      }\n    }\n\n    // If it was found, remove it from the favorites array\n\n    if (index !== -1) {\n      favorites.splice(index, 1);\n\n      this.setState({\n        favorites: favorites\n      });\n\n      localStorage.favorites = JSON.stringify(favorites);\n    }\n  }\n\n  onClickLog() {\n    $(\"#closeModal\").click(function() {\n      $(\"#exampleModal\").modal(\"hide\");\n    });\n  }\n\n  onClickSign() {\n    $(\"#closeModal\").click(function() {\n      $(\"#exampleModal2\").modal(\"hide\");\n    });\n  }\n\n  isCountryInFavorites(countries) {\n    var favorites = this.state.favorites;\n\n    for (var i = 0; i < favorites.length; i++) {\n      if (favorites[i].countries === countries) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  LogoutClick() {\n    getLogOut().then(response => {\n      console.log(\"Log Out\", response.data);\n      this.updateUser(null);\n    });\n  }\n\n  deleteProfile() {\n    postUserDelete().then(response => {\n      console.log(\"DELETED\", response.data);\n      this.updateUser(null);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"header w-100\">\n          <nav className=\" w-100 navbar navbar-light bg-light\">\n            <NavLink className=\"navbar-brand\" exact to=\"/\">\n              <img className=\"App-logo\" src={logo} alt=\"Country Chat logo\" />\n            </NavLink>\n            {this.state.currentUser ? (\n              <div className=\"userLogged d-flex align-items-center\">\n                <div className=\"User-out d-flex align-items-center\">\n                  <p className=\"userName\">\n                    {\" \"}\n                    Welcome <b>{this.state.currentUser.name}</b>\n                  </p>\n                  <button\n                    className=\"btn btn-outline-success my-2 my-sm-0 btnLogout\"\n                    onClick={() => this.LogoutClick()}\n                  >\n                    Log Out\n                  </button>\n                  <NavLink to={getUseraddress(this.state.currentUser)}>\n                    <img\n                      src={this.state.currentUser.avatarURL}\n                      alt=\"User-Img\"\n                      className=\"userImg\"\n                    />\n                  </NavLink>\n\n                  {/* component mp-notif */}\n                </div>\n              </div>\n            ) : (\n              <div className=\"buttons\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-success my-2 my-sm-0\"\n                  data-toggle=\"modal\"\n                  data-target=\"#exampleModal2\"\n                >\n                  Sign up\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-success my-2 my-sm-0\"\n                  data-toggle=\"modal\"\n                  data-target=\"#exampleModal\"\n                >\n                  Log In\n                </button>\n              </div>\n            )}\n\n            <div\n              className=\"modal fade\"\n              id=\"exampleModal\"\n              tabIndex=\"-1\"\n              role=\"dialog\"\n              aria-labelledby=\"exampleModalLabel\"\n              aria-hidden=\"true\"\n            >\n              <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h4 className=\"modal-title\" id=\"exampleModalLabel\">\n                      You are at few steps to chat with awsome people\n                    </h4>\n                    <button\n                      type=\"button\"\n                      className=\"close\"\n                      data-dismiss=\"modal\"\n                      aria-label=\"Close\"\n                    >\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                  </div>\n                  <div className=\"modal-body\">\n                    <LoginForm\n                      currentUser={this.state.currentUser}\n                      loginSuccess={user => this.updateUser(user)}\n                      onClickLog={() => this.onClickLog()}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div\n              className=\"modal fade\"\n              id=\"exampleModal2\"\n              tabIndex=\"-1\"\n              role=\"dialog\"\n              aria-labelledby=\"exampleModalLabel2\"\n              aria-hidden=\"true\"\n            >\n              <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel2\">\n                      Hello World, but first please sign up\n                    </h5>\n                    <button\n                      type=\"button\"\n                      className=\"close\"\n                      data-dismiss=\"modal\"\n                      aria-label=\"Close\"\n                    >\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                  </div>\n                  <div className=\"modal-body\">\n                    <SignupForm\n                      currentUser={this.state.currentUser}\n                      signupSuccess={user => this.updateUser(user)}\n                      onClickSign={() => this.onClickSign()}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </nav>\n        </header>\n\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return (\n                <HomePage\n                  currentUser={this.state.currentUser}\n                  signupSuccess={user => this.updateUser(user)}\n                  favListImport={() => this.favInitialState()}\n                  toggleFav={() => this.toggleFavorite()}\n                />\n              );\n            }}\n          />\n          <Route path=\"/countries\" component={Search} />\n          <Route\n            path=\"/account/:userName\"\n            render={props => {\n              return (\n                <UserAccount\n                  currentUser={this.state.currentUser}\n                  editSuccess={user => this.updateUser(user)}\n                  deleteSuccess={user => this.updateUser(user)}\n                  favListImport={() => this.favInitialState()}\n                  toggleFav={() => this.toggleFavorite()}\n                  match={props.match}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/linkall-messenger/:countryName/:roomName\"\n            render={props => {\n              return (\n                <AppMessenger\n                  match={props.match}\n                  currentUser={this.state.currentUser}\n                />\n              );\n            }}\n          />\n\n          {/*  404 route should go LAST */}\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"bootstrap/dist/js/bootstrap.js\"\nimport \"bootstrap/dist/js/bootstrap.bundle.js\"\nimport './style.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}